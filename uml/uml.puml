@startuml domain_model
    skinparam classAttributeIconSize 0
    skinparam style strictuml

    class "TreeData" as TD <<type>> {}
    class "Reader" as R <<type>> {}
    class "Displayer" as D <<type>> {}
    class "**Tree**" as T <<type>> {
        + LoadData()
        + CloseData()
    }
    class "**TreeView**" as TV <<type>> {}

    TD " * " --right-- R: reads < 
    R --right-- T: passes content >
    R --right-- T: instructs <
    T --right-- D: updates >
    D -right- TV: updates >
@enduml



@startuml class_diagram
    skinparam ClassAttributeIconSize 0
    skinparam style strictuml
    skinparam linetype ortho

    abstract "**TWB**" as TWB {
        - branches : list
        + add_branch()
        + move_branch()
        + remove_branch()
        + rename_branch()
    }
    class "**Branch**" as Branch {
        +attributes : dictionary
    }
    class "**Tree**" as Tree {}

    TWB <|-- Branch 
    TWB <|--- Tree : \t\t\t\t\t\t
    Tree o-left- " 0..*" Branch  : \t\t\t\t\t
    Branch o-down- "0..*" Branch

    class "**TreeManager**" as TreeManager {
        # trees : list
        + load_xml()
        + save_xml()
        + create_tree()
        + destroy_tree()
    }

    class "**TreeApp**" as TreeApp {}
    class "**Treeview**" as Treeview {}

    TreeManager -left-> Tree
    TreeApp -right-> Treeview

    class "**Xml**" as Xml {}

    TreeManager <-right-TreeApp
    Xml <-- TreeManager

    class "**EditWindow**" as EditWindow {
        - element : Branch
        + confirm()
        - cancel()
    }
    EditWindow <-- Treeview
@enduml


@startuml treeview_sequence_diagram
skinparam Shadowing false
skinparam Style strictuml

    User -> Treeview: Select branch
    activate Treeview
    create PopUpMenu
    Treeview -> PopUpMenu: Create
    PopUpMenu -> Treeview: Select action
    create EditWindow
    destroy PopUpMenu

    create EditWindow
    Treeview -> EditWindow: Create
    User -> EditWindow: Set entries, Confirm
    Branch <- EditWindow: Update
    destroy EditWindow

@enduml


@startuml error_message_sequence_diagram
skinparam Shadowing false
skinparam Style strictuml

    actor "User" as User
    participant "<u>: Treeview</u>" as Treeview
    activate Treeview
    participant "<u>: Branch</u>" as Branch

    User -> Treeview: Select action
    Treeview -> Branch: Call action on branch
    group Action fails
        Branch -> Treeview: Error message

        participant "<u>: MessageBox</u>" as MessageBox
        create MessageBox

        Treeview -> MessageBox: Create
        User -> MessageBox: Close
        destroy MessageBox
    end
@enduml
